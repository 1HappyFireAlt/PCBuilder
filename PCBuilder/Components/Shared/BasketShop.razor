@page "/basket"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using PCBuilder.Components.Account.Shared
@using PCBuilder.Model
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@inject ProtectedSessionStorage ProtectedSessionStorage
@inject ShopBasket Basket
@inject NavigationManager NavigationManager


<table class="table">
    <thead>
        <tr>
            <th>Product</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Basket.GetItems())
        {
            <tr>
                <td>@item.Component.Name</td>
                <td>@item.Quantity</td>
                <td>@item.Component.Price.ToString("C")</td>
            </tr>
        }

    </tbody>
</table>
<div class="d-flex justify-content-between">
    <div>
        <h4>Total Price: @(Basket.TotalPrice().ToString("C"))</h4>
    </div>
    <div>
        <button @onclick="GoToCheckout" class="btn btn-outline-primary">Checkout</button>
    </div>
</div>
}

@code {
    [Parameter]
    public bool IsEditable { get; set; } = false;


    protected override void OnInitialized()
    {
        Basket.OnCartUpdated += async () => await CartUpdated();
    }

    private async Task CartUpdated()
    {
        StateHasChanged();
        await ProtectedSessionStorage.SetAsync("cart", Basket.GetItems());
    }


    private void IncreaseQuantity(BasketItem item)
    {
        Basket.AddItem(item.Component, 1);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        StateHasChanged();
    }

    private void GoToCheckout()
    {
        NavigationManager.NavigateTo("/checkout");
    }
    private void GoToStore()
    {
        NavigationManager.NavigateTo("/");
    }
}
